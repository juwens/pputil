name: Push at Main

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: macos-15

    steps:
    - uses: actions/checkout@v4
    - uses: Swatinem/rust-cache@v2
    - name: Build
      run: cargo build --release # --verbose
    - name: TarGz Release
      run: tar -czvf target/release/pputil.tar.gz -C target/release pputil
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        path: |
          target/release/pputil.tar.gz
          target/release/pputil
    - name: Run tests
      run: cargo test --release # --verbose
    - name: extract version from cargo.toml
      id: version
      run: |
        echo "cargo_version=v$(yq .package.version Cargo.toml)" >> $GITHUB_OUTPUT
        echo "-----"
        echo "$GITHUB_OUTPUT"
        echo "-----"
        cat "$GITHUB_OUTPUT"
    - name: echo version
      uses: actions/github-script@v7
      if: always()
      with:
        script: |
          console.log("${{ steps.version.outputs.cargo_version }}")
          console.log(context)
   
    - uses: actions/github-script@v7
      id: my-script-on-ubuntu
      with:
        runs-on: ubuntu-latest
        result-encoding: string
        retries: 3
        retry-exempt-status-codes: 400,401
        script: |
          octokit.rest.issues.get({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
          })

    - uses: actions/github-script@v7
      id: my-script-on-mac
      with:
        result-encoding: string
        retries: 3
        retry-exempt-status-codes: 400,401
        script: |
          octokit.rest.issues.get({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
          })
      
    - name: create git tag
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.git.createRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: 'refs/tags/${{ steps.version.outputs.cargo_version }}',
            sha: context.sha
          })
     # sadly, action "rust-build/rust-build.action" is only supported on linux runners
    - name: create gh release
      uses: actions/github-script@v7
      if: always()
      # env:
      #   GH_TOKEN: ${{ github.token }}
      with:
        script: |
          console.log(global);
          
          for(var b in global) { 
            if(global.hasOwnProperty(b)) console.log(b); 
          }

          await octokit.request('POST /repos/{owner}/{repo}/releases', {
            owner: 'OWNER',
            repo: 'REPO',
            tag_name: '${{ steps.version.outputs.cargo_version }}',
            target_commitish: 'master',
            name: 'release ${{ steps.version.outputs.cargo_version }}',
            body: 'release ${{ steps.version.outputs.cargo_version }}',
            draft: false,
            prerelease: false,
            generate_release_notes: false,
            headers: {
              'X-GitHub-Api-Version': '2022-11-28'
            }
          });