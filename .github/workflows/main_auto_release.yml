name: Push at Main

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: macos-15

    steps:
    - uses: actions/checkout@v4
    - uses: Swatinem/rust-cache@v2
    - name: Build
      run: cargo build --release # --verbose
    - name: TarGz Release
      run: tar -czvf target/release/pputil.tar.gz -C target/release pputil
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        path: |
          target/release/pputil.tar.gz
          target/release/pputil
    - name: Run tests
      run: cargo test --release # --verbose

  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: extract version from cargo.toml
        id: cargo_toml
        run: |
          echo "package__version=$(yq .package.version Cargo.toml)" >> $GITHUB_OUTPUT
          echo "tag=v$(yq .package.version Cargo.toml)" >> $GITHUB_OUTPUT
      # - name: echo version
      #   uses: actions/github-script@v7
      #   with:
      #     script: |
      #       console.log("${{ steps.cargo_toml.outputs.package__version }}")
      #       console.log(context)
      # - name: create git tag
      #   uses: actions/github-script@v7
      #   with:
      #     script: |
      #       github.rest.git.createRef({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         ref: 'refs/tags/${{ steps.cargo_toml.outputs.package__version }}',
      #         sha: context.sha
      #       })
      - name: get tags
        uses: actions/github-script@v7
        with:
          script: |
            let res = await github.request('GET /repos/{owner}/{repo}/tags',
            {
              owner: context.repo.owner,
              repo: context.repo.repo,
              headers: {
                'X-GitHub-Api-Version': '2022-11-28'
              }
            });
            console.log(res.data);
      - name: create gh release
        uses: actions/github-script@v7
        with:
          script: |
            // v1.2.3
            let version = `v${{ steps.cargo_toml.outputs.package__version }}`;
            console.log('raw_version: ${{ steps.cargo_toml.outputs.package__version }}');
            console.log(`version: ${version}`);

            let createReleaseRes = await github.request('POST /repos/{owner}/{repo}/releases', {
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: version,
              target_commitish: 'main',
              name: `${raw_version}`,
              body: '',
              draft: true,
              prerelease: true,
              generate_release_notes: false,
              headers: {
                'X-GitHub-Api-Version': '2022-11-28'
              }
            });
            let d = createReleaseRes.data;
            console.log({
              url: d.url,
              tag_name: d.tag_name,
              name: d.name,
              draft: d.draft,
              prerelease: d.prerelease,
              created_at: d.created_at,
            });